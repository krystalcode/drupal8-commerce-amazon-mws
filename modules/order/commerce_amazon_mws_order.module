<?php

/**
 * @file
 * Provides functionality for the Commerce Amazon MWS Order module.
 */

use Drupal\commerce_amazon_mws\Entity\StoreInterface as AmwsStoreInterface;
use Drupal\commerce_amazon_mws_order\Adapters\CpigroupPhpAmazonMws\OrderStorage as AmwsOrderStorage;

/**
 * Constants.
 */

/**
 * The name of the logger channel to use throughout this module.
 */
const COMMERCE_AMAZON_MWS_ORDER_LOGGER_CHANNEL = 'commerce_amazon_mws_order';

/**
 * Hooks.
 */

/**
 * Implements hook_cron().
 */
function commerce_amazon_mws_order_cron() {
  $amws_store_storage = \Drupal::service('entity_type.manager')->getStorage('commerce_amws_store');
  $order_storage = \Drupal::service('entity_type.manager')->getStorage('commerce_order');
  $amws_order_service = \Drupal::service('commerce_amazon_mws_order.order_service');
  $logger = \Drupal::service('logger.factory')->get(COMMERCE_AMAZON_MWS_ORDER_LOGGER_CHANNEL);

  $amws_store_ids = $amws_store_storage
    ->getQuery()
    ->condition('status', AmwsStoreInterface::STATUS_PUBLISHED)
    ->execute();

  if (!$amws_store_ids) {
    return;
  }

  $amws_stores = $amws_store_storage->loadMultiple($amws_store_ids);
  foreach ($amws_stores as $amws_store) {
    $amws_order_storage = new AmwsOrderStorage(
      $amws_store,
      $order_storage,
      $amws_order_service,
      $logger
    );
    $amws_order_storage->import();
    unset($amws_order_storage);
  }
}
